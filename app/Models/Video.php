<?php

namespace App\Models;

use Gecche\Cupparis\App\Breeze\Breeze;
use Spatie\Sluggable\HasSlug;
use Spatie\Sluggable\SlugOptions;

/**
 * Breeze (Eloquent) model for video table.
 */
class Video extends Breeze
{
	use Relations\VideoRelations;


    use HasSlug;
//    use ModelWithUploadsTrait;

    protected $table = 'video';

    protected $guarded = [
        'id'
    ];

    public $timestamps = true;
    public $ownerships = true;

    public $appends = [

    ];


    public static $relationsData = [

			'categoria' => [self::BELONGS_TO, 'related' => 'App\Models\MateriaOrientamento', 'table' => 'materie_orientamento', 'foreignKey' => 'materia_id'],


//        'belongsto' => array(self::BELONGS_TO, Video::class, 'foreignKey' => '<FOREIGNKEYNAME>'),
//        'belongstomany' => array(self::BELONGS_TO_MANY, Video::class, 'table' => '<TABLEPIVOTNAME>','pivotKeys' => [],'foreignKey' => '<FOREIGNKEYNAME>','otherKey' => '<OTHERKEYNAME>') ,
//        'hasmany' => array(self::HAS_MANY, Video::class, 'table' => '<TABLENAME>','foreignKey' => '<FOREIGNKEYNAME>'),
    ];

    public static $rules = [
//        'username' => 'required|between:4,255|unique:users,username',
    ];

    public $columnsForSelectList = ['titolo_it'];
     //['id','descrizione'];

    public $defaultOrderColumns = ['ordine' => 'ASC', ];
     //['cognome' => 'ASC','nome' => 'ASC'];

    public $columnsSearchAutoComplete = ['titolo_it'];
     //['cognome','denominazione','codicefiscale','partitaiva'];

    public $nItemsAutoComplete = 20;
    public $nItemsForSelectList = 100;
    public $itemNoneForSelectList = false;
    public $fieldsSeparator = ' - ';

    public function getSlugOptions() : SlugOptions
    {
        return SlugOptions::create()
            ->generateSlugsFrom('titolo_it')
            ->saveSlugsTo('slug_it');
    }

    public function save(array $options = [])
    {
        $ordine = $this->ordine;
        if (!$this->tipo) {
            $this->tipo = 'youtube';
        }
        $saved = parent::save($options); // TODO: Change the autogenerated stub
        if ($saved && $ordine) {
            static::where('id','!=',$this->getKey())
                ->where('ordine',$ordine)
                ->update(['ordine' => null]);
        }

        return $saved;
    }


}
